[2022-08-31 11:42:16,659] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 11:42:16,739] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-08-31 11:42:16,749] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-08-31 11:42:16,814] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-08-31 11:42:16,819] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-08-31 11:42:16,824] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-08-31 11:42:16,827] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-08-31 11:42:16,839] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2022-08-31 11:42:16,845] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-08-31 11:42:16,850] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-08-31 11:42:16,857] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 11:42:16,858] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-08-31 11:42:16,858] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-08-31 11:42:16,858] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-08-31 11:42:16,858] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-08-31 11:42:16,860] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-08-31 11:42:16,860] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-08-31 11:42:16,861] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-08-31 11:42:16,861] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-08-31 11:42:16,862] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-08-31 11:42:16,875] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:42:16,876] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:42:16,882] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:42:16,883] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:42:16,884] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 11:42:16,884] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 11:42:16,889] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 11:42:16,890] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-08-31 11:42:16,895] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 11:42:16,898] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 11:42:16,898] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 11:42:16,899] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-08-31 11:42:16,899] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-08-31 11:42:16,900] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-08-31 11:42:16,922] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-08-31 11:42:21,023] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-08-31 11:42:21,023] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-08-31 11:42:21,029] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-08-31 11:42:21,029] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 11:42:21,031] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 11:42:21,034] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-08-31 11:42:21,036] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45) (kafka.controller.KafkaController)
[2022-08-31 11:42:21,091] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 11:42:21,124] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 11:42:21,925] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 11:42:21,926] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 11:42:25,316] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-08-31 11:42:25,316] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-08-31 11:42:25,319] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-08-31 11:42:25,320] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 11:42:25,321] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-08-31 11:42:25,325] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 11:42:25,327] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45, 2 -> 61) (kafka.controller.KafkaController)
[2022-08-31 11:42:25,396] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 11:42:25,415] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 11:46:09,176] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 11:46:09,226] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-08-31 11:46:09,238] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-08-31 11:46:09,325] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-08-31 11:46:09,353] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-08-31 11:46:09,365] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-08-31 11:46:09,371] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-08-31 11:46:09,396] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2022-08-31 11:46:09,411] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-08-31 11:46:09,425] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-08-31 11:46:09,442] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 11:46:09,444] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-08-31 11:46:09,444] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-08-31 11:46:09,445] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-08-31 11:46:09,445] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-08-31 11:46:09,449] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-08-31 11:46:09,449] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-08-31 11:46:09,449] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-08-31 11:46:09,450] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-08-31 11:46:09,451] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-08-31 11:46:09,469] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:46:09,470] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:46:09,481] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:46:09,482] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 11:46:09,483] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 11:46:09,484] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 11:46:09,484] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 11:46:09,490] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 11:46:09,491] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-08-31 11:46:09,504] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 11:46:09,505] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 11:46:09,505] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-08-31 11:46:09,506] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-08-31 11:46:09,513] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-08-31 11:46:09,549] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-08-31 11:46:12,389] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-08-31 11:46:12,390] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-08-31 11:46:12,394] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 11:46:12,399] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-08-31 11:46:12,403] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 11:46:12,405] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-08-31 11:46:12,407] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 46) (kafka.controller.KafkaController)
[2022-08-31 11:46:12,481] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 11:46:12,510] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 11:46:13,714] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-08-31 11:46:13,714] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-08-31 11:46:13,717] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 11:46:13,718] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-08-31 11:46:13,718] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-08-31 11:46:13,719] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 11:46:13,720] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 46, 2 -> 61) (kafka.controller.KafkaController)
[2022-08-31 11:46:13,774] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 11:46:13,789] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 11:46:14,553] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 11:46:14,553] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 11:51:14,556] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 11:51:14,556] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 11:51:40,383] INFO [Controller id=0] New topics: [Set(library-events)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(library-events,Some(kZvlzPZ0R2yqgNoV9PJ_Gg),Map(library-events-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), library-events-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), library-events-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-08-31 11:51:40,384] INFO [Controller id=0] New partition creation callback for library-events-0,library-events-1,library-events-2 (kafka.controller.KafkaController)
[2022-08-31 11:56:14,557] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 11:56:14,557] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 11:56:14,559] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 11:56:14,560] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 11:56:14,560] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 11:56:14,560] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 11:56:14,560] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 11:56:14,560] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:01:14,561] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:01:14,572] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:01:14,572] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:01:14,572] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:01:14,572] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:01:14,572] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:01:14,572] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:01:14,573] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:06:14,575] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:09:59,835] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2022-08-31 12:09:59,839] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2022-08-31 12:11:14,577] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:11:14,577] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:11:14,578] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:11:14,578] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:11:14,578] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:11:14,578] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:11:14,578] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:11:14,578] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:16:14,578] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:16:14,578] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:16:14,578] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:16:14,578] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:16:14,578] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:16:14,579] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:16:14,579] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:16:14,579] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:21:14,580] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:26:14,582] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:26:14,582] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:26:14,583] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:26:14,583] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:26:14,583] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:26:14,583] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:26:14,583] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:26:14,583] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:31:14,585] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:31:14,585] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:31:14,585] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:31:14,585] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:31:14,585] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:31:14,586] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:31:14,586] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:31:14,586] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:36:14,588] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-08-31 12:41:14,590] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:45:58,713] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(NW7ra4YgQRKiLOq9z-jhnA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-08-31 12:45:58,713] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-08-31 12:45:58,845] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 12:45:58,846] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 12:45:58,846] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 12:46:14,592] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:46:14,592] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:46:14,594] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:46:14,594] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:46:14,594] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:46:14,594] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:46:14,594] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:46:14,594] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:51:14,596] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:51:14,596] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:51:14,598] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:51:14,598] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:51:14,598] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:51:14,598] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:51:14,598] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:51:14,598] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:56:14,600] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 12:56:14,600] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 12:56:14,601] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:56:14,601] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:56:14,601] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:56:14,601] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 12:56:14,601] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 12:56:14,601] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:01:14,603] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:01:14,611] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:01:14,616] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:01:14,616] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:01:14,616] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:01:14,616] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:01:14,616] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:01:14,616] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:06:14,618] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:06:14,618] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:06:14,619] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:06:14,619] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:06:14,619] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:06:14,619] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:06:14,619] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:06:14,619] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:11:14,620] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:11:14,620] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:11:14,621] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:11:14,622] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:11:14,622] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:11:14,622] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:11:14,622] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:11:14,622] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:11:36,348] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2022-08-31 13:11:36,353] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2022-08-31 13:16:14,626] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:16:14,626] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:16:14,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:16:14,628] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:16:14,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:16:14,628] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:16:14,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:16:14,628] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:17:31,825] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000), Zk path version 2 (kafka.controller.KafkaController)
[2022-08-31 13:17:31,840] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=2000, size=1000) by writing to Zk with path version 3 (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:21:14,629] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:26:14,631] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:26:14,631] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:26:14,632] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:26:14,633] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:26:14,633] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:26:14,633] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:26:14,633] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:26:14,633] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:31:14,641] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:31:14,641] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:31:14,643] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:31:14,643] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:31:14,643] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:31:14,643] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:31:14,644] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:31:14,644] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:36:14,648] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:36:14,648] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:36:14,650] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:36:14,650] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:36:14,650] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:36:14,650] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:36:14,650] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:36:14,650] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:41:14,652] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:41:14,652] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:41:14,653] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:41:14,653] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:41:14,654] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:41:14,654] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:41:14,654] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:41:14,654] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:46:14,655] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:46:14,655] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:46:14,657] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:46:14,657] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:46:14,657] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:46:14,657] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:46:14,657] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:46:14,657] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:51:14,658] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 13:51:14,658] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 13:51:14,659] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:51:14,659] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:51:14,659] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:51:14,659] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 13:51:14,659] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-08-31 13:51:14,659] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 15:22:46,578] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 15:22:46,621] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-08-31 15:22:46,623] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-08-31 15:22:46,627] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-08-31 15:22:46,631] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-08-31 15:22:46,636] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-08-31 15:22:46,650] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 214) (kafka.controller.KafkaController)
[2022-08-31 15:22:46,666] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-08-31 15:22:46,720] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-08-31 15:22:46,732] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 15:22:46,736] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-08-31 15:22:46,736] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-08-31 15:22:46,737] INFO [Controller id=0] Current list of topics in the cluster: HashSet(library-events, __consumer_offsets) (kafka.controller.KafkaController)
[2022-08-31 15:22:46,737] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-08-31 15:22:46,744] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-08-31 15:22:46,744] INFO [Controller id=0] List of topics ineligible for deletion: library-events,__consumer_offsets (kafka.controller.KafkaController)
[2022-08-31 15:22:46,744] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-08-31 15:22:46,746] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(library-events, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-08-31 15:22:46,747] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-08-31 15:22:46,767] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 15:22:46,777] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 15:22:46,778] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 15:22:46,815] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 15:22:46,960] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=library-events,Partition=1,Replica=1] -> OfflineReplica, [Topic=library-events,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=library-events,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=library-events,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=library-events,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=library-events,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=library-events,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=library-events,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=library-events,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 15:22:46,961] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 15:22:46,967] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 15:22:47,074] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, library-events-2 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, library-events-1 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, library-events-0 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 15:22:47,074] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-08-31 15:22:47,087] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 15:22:47,088] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 15:22:47,088] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-08-31 15:22:47,089] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-08-31 15:22:47,090] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-08-31 15:22:47,105] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-08-31 15:22:52,108] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 15:22:52,109] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 15:22:52,113] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 15:22:52,114] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 15:22:52,114] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), library-events-1 -> List(1, 0, 2), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)) (kafka.controller.KafkaController)
[2022-08-31 15:22:52,114] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-08-31 15:22:52,116] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-08-31 15:22:52,117] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), library-events-0 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2022-08-31 15:22:52,117] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-08-31 15:22:52,117] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-08-31 15:22:54,309] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-08-31 15:22:54,309] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-08-31 15:22:54,315] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 15:22:54,317] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-08-31 15:22:54,323] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 15:22:54,379] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-08-31 15:22:54,382] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 214, 1 -> 273) (kafka.controller.KafkaController)
[2022-08-31 15:22:54,419] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 15:22:54,444] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 15:22:54,926] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-1). (kafka.controller.KafkaController)
[2022-08-31 15:22:54,931] DEBUG [Controller id=0] ISR for partition library-events-1 updated to [0,1] and zkVersion updated to [4] (kafka.controller.KafkaController)
[2022-08-31 15:22:54,951] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-2, library-events-0). (kafka.controller.KafkaController)
[2022-08-31 15:22:54,956] DEBUG [Controller id=0] ISR for partition library-events-2 updated to [0,1] and zkVersion updated to [3] (kafka.controller.KafkaController)
[2022-08-31 15:22:54,956] DEBUG [Controller id=0] ISR for partition library-events-0 updated to [0,1] and zkVersion updated to [4] (kafka.controller.KafkaController)
[2022-08-31 15:23:01,434] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-08-31 15:23:01,435] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-08-31 15:23:01,443] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-08-31 15:23:01,517] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 15:23:01,519] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 15:23:01,523] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-08-31 15:23:01,534] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 214, 1 -> 273, 2 -> 309) (kafka.controller.KafkaController)
[2022-08-31 15:23:01,652] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 15:23:01,681] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 15:23:02,253] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-1). (kafka.controller.KafkaController)
[2022-08-31 15:23:02,258] DEBUG [Controller id=0] ISR for partition library-events-1 updated to [0,1,2] and zkVersion updated to [5] (kafka.controller.KafkaController)
[2022-08-31 15:23:02,271] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-2, library-events-0). (kafka.controller.KafkaController)
[2022-08-31 15:23:02,277] DEBUG [Controller id=0] ISR for partition library-events-2 updated to [0,1,2] and zkVersion updated to [4] (kafka.controller.KafkaController)
[2022-08-31 15:23:02,277] DEBUG [Controller id=0] ISR for partition library-events-0 updated to [0,1,2] and zkVersion updated to [5] (kafka.controller.KafkaController)
[2022-08-31 15:27:52,122] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 15:27:52,122] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 15:27:52,123] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 15:27:52,123] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 15:27:52,123] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 15:27:52,123] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 15:27:52,124] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 15:27:52,124] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 15:31:16,200] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=2000, size=1000), Zk path version 3 (kafka.controller.KafkaController)
[2022-08-31 15:31:16,210] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=3000, size=1000) by writing to Zk with path version 4 (kafka.controller.KafkaController)
[2022-08-31 15:32:52,126] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 15:32:52,126] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 15:32:52,128] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 15:32:52,128] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 15:32:52,128] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 15:32:52,128] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 15:32:52,128] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 15:32:52,128] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 15:37:52,132] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 15:37:52,132] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 15:37:52,133] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 15:37:52,133] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 15:37:52,133] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 15:37:52,133] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 15:37:52,133] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 15:37:52,133] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 17:31:32,020] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 17:31:32,064] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-08-31 17:31:32,066] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-08-31 17:31:32,074] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-08-31 17:31:32,079] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-08-31 17:31:32,083] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-08-31 17:31:32,104] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 365) (kafka.controller.KafkaController)
[2022-08-31 17:31:32,126] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-08-31 17:31:32,184] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-08-31 17:31:32,197] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 17:31:32,200] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-08-31 17:31:32,201] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-08-31 17:31:32,201] INFO [Controller id=0] Current list of topics in the cluster: HashSet(library-events, __consumer_offsets) (kafka.controller.KafkaController)
[2022-08-31 17:31:32,201] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-08-31 17:31:32,210] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-08-31 17:31:32,211] INFO [Controller id=0] List of topics ineligible for deletion: library-events,__consumer_offsets (kafka.controller.KafkaController)
[2022-08-31 17:31:32,212] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-08-31 17:31:32,212] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(library-events, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-08-31 17:31:32,214] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-08-31 17:31:32,236] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 17:31:32,249] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 17:31:32,249] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 17:31:32,292] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 17:31:32,443] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=library-events,Partition=1,Replica=1] -> OfflineReplica, [Topic=library-events,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=library-events,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=library-events,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=library-events,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=library-events,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=library-events,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=library-events,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=library-events,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-08-31 17:31:32,444] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 17:31:32,452] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 17:31:32,540] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, library-events-2 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, library-events-1 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, library-events-0 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-08-31 17:31:32,541] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-08-31 17:31:32,551] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 17:31:32,552] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-08-31 17:31:32,553] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-08-31 17:31:32,554] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-08-31 17:31:32,560] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-08-31 17:31:32,582] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-08-31 17:31:34,918] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=3000, size=1000), Zk path version 4 (kafka.controller.KafkaController)
[2022-08-31 17:31:34,923] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=4000, size=1000) by writing to Zk with path version 5 (kafka.controller.KafkaController)
[2022-08-31 17:31:37,602] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 17:31:37,603] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 17:31:37,608] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 17:31:37,610] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 17:31:37,610] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), library-events-1 -> List(1, 0, 2), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)) (kafka.controller.KafkaController)
[2022-08-31 17:31:37,610] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-08-31 17:31:37,613] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-08-31 17:31:37,613] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), library-events-0 -> List(2, 1, 0), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2022-08-31 17:31:37,613] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-08-31 17:31:37,613] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-08-31 17:32:17,826] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-08-31 17:32:17,827] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-08-31 17:32:17,838] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-08-31 17:32:17,870] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 17:32:17,876] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 17:32:17,944] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-08-31 17:32:17,948] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 365, 1 -> 423) (kafka.controller.KafkaController)
[2022-08-31 17:32:18,012] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 17:32:18,045] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 17:32:19,030] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-1). (kafka.controller.KafkaController)
[2022-08-31 17:32:19,055] DEBUG [Controller id=0] ISR for partition library-events-1 updated to [0,1] and zkVersion updated to [8] (kafka.controller.KafkaController)
[2022-08-31 17:32:19,112] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-2, library-events-0). (kafka.controller.KafkaController)
[2022-08-31 17:32:19,121] DEBUG [Controller id=0] ISR for partition library-events-2 updated to [0,1] and zkVersion updated to [7] (kafka.controller.KafkaController)
[2022-08-31 17:32:19,121] DEBUG [Controller id=0] ISR for partition library-events-0 updated to [0,1] and zkVersion updated to [8] (kafka.controller.KafkaController)
[2022-08-31 17:32:24,564] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2022-08-31 17:32:24,564] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-08-31 17:32:24,579] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-08-31 17:32:24,585] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-08-31 17:32:24,587] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-08-31 17:32:24,632] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-08-31 17:32:24,636] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 365, 1 -> 423, 2 -> 459) (kafka.controller.KafkaController)
[2022-08-31 17:32:24,720] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-08-31 17:32:24,749] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-08-31 17:32:25,470] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-1). (kafka.controller.KafkaController)
[2022-08-31 17:32:25,475] DEBUG [Controller id=0] ISR for partition library-events-1 updated to [0,1,2] and zkVersion updated to [9] (kafka.controller.KafkaController)
[2022-08-31 17:32:25,489] DEBUG [Controller id=0] Updating ISRs for partitions: Set(library-events-2, library-events-0). (kafka.controller.KafkaController)
[2022-08-31 17:32:25,495] DEBUG [Controller id=0] ISR for partition library-events-2 updated to [0,1,2] and zkVersion updated to [8] (kafka.controller.KafkaController)
[2022-08-31 17:32:25,495] DEBUG [Controller id=0] ISR for partition library-events-0 updated to [0,1,2] and zkVersion updated to [9] (kafka.controller.KafkaController)
[2022-08-31 17:33:28,612] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=4000, size=1000), Zk path version 5 (kafka.controller.KafkaController)
[2022-08-31 17:33:28,618] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=5000, size=1000) by writing to Zk with path version 6 (kafka.controller.KafkaController)
[2022-08-31 17:36:37,615] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 17:36:37,615] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 17:36:37,617] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 17:36:37,618] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 17:36:37,618] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 17:36:37,618] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 17:36:37,618] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 17:36:37,618] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 17:41:37,620] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 17:41:37,620] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 17:41:37,622] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 17:41:37,622] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 17:41:37,622] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 17:41:37,623] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 17:41:37,623] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 17:41:37,623] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 17:46:37,624] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 17:46:37,624] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 17:46:37,625] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 17:46:37,626] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 17:46:37,626] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 17:46:37,626] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 17:46:37,626] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 17:46:37,626] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 17:51:37,627] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 17:51:37,627] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 17:51:37,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 17:51:37,628] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 17:51:37,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 17:51:37,628] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 17:51:37,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 17:51:37,628] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 17:56:37,629] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 17:56:37,629] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 17:56:37,629] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 17:56:37,629] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 17:56:37,630] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 17:56:37,630] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 17:56:37,630] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 17:56:37,630] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2022-08-31 18:01:37,631] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-08-31 18:01:37,637] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-08-31 18:01:37,637] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-08-31 18:01:37,637] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-08-31 18:01:37,637] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(library-events-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2022-08-31 18:01:37,637] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2022-08-31 18:01:37,637] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(library-events-0 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2022-08-31 18:01:37,637] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
